###############################################################################
# The steps configuration file to Upgrade the Subscriber Provisioning Platform
# Which is more than the SPF component alone (therefore SPP). It will upgrade 
# all associated components with the SPF its database. It has to be run on all
# nodes in parallel where MySQL-Cluster components and SPF's are running. The 
# following software can be updated:
#  * OpenSouce
#  * MySQL-Cluster components (mgr, ndbmtd, mysql)
#  * SPF
#  * Component using NDB-API to communicate to SPF database (like XS, SSI)
#  * Other components using MySQL-Serve bu SPF database scheme (currently none)
#
# The script has to be run on the following type of node:
#  * ndb data base node (running ndb,td) (typically part of SE element)
#  * mysql_sever nodes, having hte NDB engine (typically part of SE element)
#  * ndb_mgr  node (typically part on OAM element).
#  * ndb_api user (like SSI and some XS, typically on TE element, SE element)
#
# The above means basically all but logging elements. It is not a problem if
# the script is run on an excluded elements, it will just stop. 
#
# Current limitations
#  * Only one ndb_mgr support. Limited due to our roll-out.
#
# You might spot a lot of similarity with the Step-Upgrade-Generic.cfg however
# there are small changes. Perhaps in the future it can be combined but then
# the same applies with the full and maintenance/feature (loss of visibility/
# flexibility).
#
# (c) Copyright 2014-2015 NewNet
# $Id: Step-Upgrade-Subscriber-Provisioning-Platform.cfg,v 1.5 2017/12/13 14:14:55 fkok Exp $
###############################################################################

# Checks before continuing upgrade at all
check_Run-Type            upgrade
check_Disks               OS AllOk
run_only_on               SubProvPlat
check_OAM_reachable       <products>
verify_grub_Config        OS
verify_File-System
verify_Network            skip_device_check
verify_Configuration      <products>

precheck_impact           upgrade_SPP <sw_iso>
explain_upgrade_procedure SubProvPlat
install_Support-Tools     <products>

# Pre-Backup phase, always done regardless of upgrade plan.
setup_Backup-Dir          create
store_All-Running         <products> <instances>
collect_Rollback-Info     OS
collect_Rollback-Info     <supporting>
collect_Rollback-Info     <products> <instances>
collect_Rollback-Info     <spp_components>

# Make sure we have all required nodes
sync_Nodes                SubProvPlat init

# Use the regular update to start and do needed dependent packages.
upgrade                   planned SubProvPlat

# Make sure next backups are add (cannot call create)
setup_Backup-Dir          mount add

# First setup of the idea to be finalized.

# This approach is full stop, not a rolling one
#execute_tp                stop <spp_components>
replication               MySQL-Cluster disable for_all_slaves
backup                    MySQL-Cluster
upgrade                   MySQL-Cluster stop
sync_Nodes                SubProvPlat stopped

upgrade                   MySQL-Cluster ndb_mgmd
upgrade                   MySQL-Cluster ndbd
upgrade                   MySQL-Cluster mysqld
sync_Nodes                SubProvPlat ndb_upgraded

startup                   MySQL-Cluster ndb_mgmd
check_Ndb-Peers           MySQL-Cluster ndb_mgmd wait master

startup                   MySQL-Cluster ndbd
check_Ndb-Peers           MySQL-Cluster ndbd wait all

startup                   MySQL-Cluster mysqld
sync_Nodes                SubProvPlat mysqld_started

upgrade                   MySQL-Cluster finalize

upgrade                   continue_planned SubProvPlat
upgrade                   verify
upgrade                   finalize

# Only do SPP components the rest should be done by running generic script again.
verify                    <spp_components>

# Located here to synchronize all and prevent users calling Upgrade-Generic.
# Which would not be a big problem but lets force the order!
sync_Nodes                SubProvPlat finished

explain_upgrade_procedure Rerun_Generic
finish_automation
